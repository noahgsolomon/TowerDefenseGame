package helps;

import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

public class LevelBuild {

    public static int[][] getLevelData(){
        //each point is a tile on the level

        int[][] level = {
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        };



        return level;
    }

    public static int[][] getMenuLevelData(){
        ArrayList<Integer> r = new ArrayList<>();
        for (int i = 0; i < 120; i++) {
            r.add(ThreadLocalRandom.current().nextInt(0, 2 + 1));

        }
        int i = 0;
        int[][] levelReset = {
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 2, 2, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                {
                r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),
                r.get(i++),r.get(i++), r.get(i++),r.get(i++),r.get(i++),r.get(i++),
                r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++)
                },
                {r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++)},
                { r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++)},
                { r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++)},
                { r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++)},
                { r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++),r.get(i++)},
        };
        return levelReset;
    }

    public static int[][] getSettingsLevelData(){
        //each point is a tile on the level

        int[][] level = {
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {0,0,0,1,0,0,0,1,0,1,1,0,1,0,1,0,1,0,0,0},
                {0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,1,1,0,1,0},
                {0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0},
                {0,1,0,1,0,0,0,1,0,1,1,0,1,0,1,0,1,0,1,0},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1},
                {1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1},
                {1,1,1,0,1,1,1,0,0,0,0,1,0,0,1,1,0,0,1,1},
                {1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1},
                {1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1},
                {1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1},
                {1,0,0,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1},
                {1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1},
                {1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1},
                {1,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
        };

        return level;
    }
    public static int[][] getMenuOff(){
        int[][] level = {
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 2, 2, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
        };
        return level;
    }

    public static int[][] getPlayingReset(){
        int[][] level = {
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}

        };
        return level;
    }

    public static int[][] generateMap(){
        int[][] level1 = {
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        };
        int[][] level2 = {
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},

        };

        int[][] level3 = {
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
                {1,1,1,1,1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},

        };

        int[][] level4 = {
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 2, 2, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0},
                { 0, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
        };

        int next = ThreadLocalRandom.current().nextInt(0, 3 + 1);

        switch (next){
            case 0:
                return level1;
            case 1:
                return level2;
            case 2:
                return level3;
            case 3:
                return level4;
        }

        return new int[][]{};
    }

//    public static int[][] newRandom(){
//
//        Random rand = new Random();
//        int next = rand.nextInt(3);
//
//        switch (next){
//            case 0:
//                return generateMap().level1;
//            case 1:
//                return level2;
//            case 2:
//                return level3;
//        }
//
//        return new int[][]{{},{}};
//    }

    public static int randCount(){

        return 0;
    }




}
